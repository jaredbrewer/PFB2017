#!/usr/bin/env python3
import sys

dna = 'GTGGGACACATATACAGTATGACTGTCAACATCTCAAAAAATGTTTTGATGCTTCATGACCCATTTATAATAAAGAAATCATGTAGAACATATAGAACATATAGAACATATTAAACATATAGAAGTCGTGTTATTTAATCAAAATTAAATCATGTAGCCTTAACATATAAAAATCATGTTGATTTAACATGTAAAAAATCACGTTTAATAAACTATATTATGTGCAACCAATGTACATAATGTTTTATGTTAATCCAACAACTTTTTTTTCATTGTGTACACTAGAACTACACAATATATGCCTAGTGTGTATGCCAATGTGCATAAATGTCCAATTTTAATAATCAATTTCAATTATACAAATTCATTAAAAATGGTGAAGATATAAACCTGCATCTAAATAGTTAATAAAATAGAAAGACAGAAAAAGCAACAAATATCTTTGGAAAAAGTTTTTTTTTTTTTTCAGGAAACTTGTAAAACATTGATTTTCAGGAGTCTAACAGACAACATTCTTCAACTTATCTAGATACTTCCTTCTTTTGGGAAAGTTTGACTGTTCCGAAAACAAAAATTCCAAAGCCACGCCTCCGAAGTATATTTAGGGCAGAAACGAAACCGTGTGAGGAGGAGAGCAGTCAGAGGTCAATTCCTTAAACTTCATCATGAATTTATTATATATTTTCCTTACATTCTTCGTCCTTTTCTGCAAATCTGATGGCTTTATCAGACCCAGTAATGGTCTCCGCGAATGCCGCCAAAACTCAAATTTAACAGCTCTAGAGGTGCTCCCAGGTGGAGGTTGGGACAACCTGCGCAATTTAGACGTGGGACGGGTGATGAACTTGACCTATTCCCAGTGTCAGACCACAGAAGATGGACTTTATCTCATCCCAGACGAAGTGTTTGTCATTCCGCGAAAAACAAGCGGAGTGGAAACTCACTCTGAGACTATAATGTCATGGCTGGATCAGAGAAGCTCCACGTCAGGATCCATCAATGCAGACGCTTCCTACCTTACTGTTCTAAACGGAAAATTCTCTGAGGAAAACACGCGCATGAAAATACACCAAGTGAGAGGGAATTCCGTAACAACACGAGTTCAGGTAAGACAGAAAAGTAAAAGCAGCATGTTTTATTTTTATTTAATGGCCAAAACGGTATATTATATTTACAGTGTATTCTTAAATTGATGTTTTTTTTTTATCATTTTGTTAGCATAAAGCTTTAAACTATATTTTTGACAACACTGACATACTCTGGATAATATTTGACAACATAGATTTGTGTCAAATGTCAAAAAAGAAAAAAAAAGTCAAATACAGGGCAGATTACGGCCCGCACTCACAGTACAATCGTGGTGTGGGCATTAAAAAGCCTTCGTAACAAGAGGACGCGTCTGTTCAAGGACATTTTTATACACATTAGTATTATTTTAAACAGAAAAGATAGGCTATAACCATATCCACATGTAAAAAAATATTAATATTTAATTAAATCTTATTCTCATTTCATAATATAAGGAAGTAAAATGATGTTTCGTAATAGCTAACATTAAAATAAAAAAAAAATTACTTACTTTCAGTTAAATGTATGTTCATTCATTCATTTTCTTTTTGGCTTAGTCCCTTTATTAATCCGAGGTCGCCACAGCGGAATAAACCATCAACCTATTCAGCACATATTTTACGCAACGGATGCCCTTCCAGCCGCAACCCATCTTTACACTCATCCATACACACTCATTACACTCATACACTACGGACAATTTAGCCTACCCAATTCACCTGTACCACATGTCTGTAGACTTTGGGGGAAACTGGAGCACCCGGAGAAAACCCACGCGAACGCCAACTGACCAAGCCTTGAAACAGCGACCTTCTTGCTGTGAGGCATCAGCACTACCTACTGCGCCACTGCATCGCCTAAATTTATGTTTCAGTGATTTTTGTTTCCTTCATCATTTGAAAATGTTTAGGGAAATGTTTATCTTATTTTTAAATAAAGAGCTTGTTAAAAGTGTTAATTCAATTTTATTTAATTTTATATTAATTTATGGTAAATTCTGGCAATTTATGTCACAACCTAAAGATGTGCCCATCTAAAGACATTCATTTTCTAATAATATTAATATAAACAAATACTCTAAGCCTCATATTTACATTAATTTTATTGAAAATATAAAAATTTACTAAAAAAGTATTGATCATTGTTTTGTGTTATCTTCTCAGGTACGCAACCATCTGTACACCGTGAATGCTTACCCTGACTTCACCCTGGATTCCCGCTTTTCCCAGCAGATCTCGGAACTCGCAGATGCTATTGAGAACAATCAAACACGTCAAGCAATGTATTTGTCAGAGAAAGTCATACTTGAATATGGTACCCATGTCATCACAAGCATCGATGCCGGTGCCACTTTAGTGCAGGAGGACTATATAAAAAGGTCTTACGTCTCTGACACTAATTCAGAGAGGTCTTCTGTCTCTGCATCCGCAGGCATTAACTTTTTTAACATGGTTAATTTTAACTTTGGCAGCAAAGAAACCGAGCAAACCTCTGAAACCCTCACTTACCAGCAAAACATCACATACTCATTAGTTCAGAGCCACGGCGGGGCTTTATTCTATCAAGGCATCACTATGCAGAAGTGGCAAGAGAGCACTCAAAATCATCTTGTGGCAATTGACCGTTCTGGTCTGCCGATTCACTATTTTCTCAATCCAGCCGTATTCCCTGACCTCCCAGTTCCCACTTTACATAAGCTTGCCTTTTCAGTGCAGAAGGCTGCAGAACGTTACTACAACATAAACACCACTCCAGGCTGCACAGATCAAAGTTCTCAAAACTTTAACTTTCAGGCCAATGTGAACGACACGTCCTGTGAGGGTCCAGTCACCAATTTGACATTTGGTGGCGTTTACCAAACATGCACTCCTGAGTCACCAGATGGAAATGTCATCTGTGATGAATTTGCACAAAGAAATCCAGACACTGGTGACTTTACTTGCCGTCAACCATACAGTGCCACTCGGTTACATTCTGAGAACGTACAGCAGGGTTATAATAATTATGAGTGCCATGAGGAATGTCATTCATGCTGGTTAATTTTGGATTGTTGTCATCAAGTATGTGGAAATGTTTACTACGTCCGCCAGGCACAAATTGACACTTATTGGTGTTCCACAAGTCAGACAGTCCCTGAAAACACCGGATACCTATTTGGGGGTCTATTTGGACCATCTTTACAAAACCCACAGACCAAATCTCATGACTGCCCTGCAAATTATTTTGAACAAGTATTTCTGACTAACGGCATGAGGATTTGTCTGAGCAATGACTATGAGGCAGGAACAATATCCTCTGTGCCATTTGGGGGTTTATTTAGCTGCCAATCTGGCAACCCTCAAGCAGGAAACCAGTACCGTTGTCCACCTCAGTACAGCCAACACCTTGCAACTATTAGCGATGGCTGTCAAGTATTGTACTGTGTACAATCGGGTGTGTTTACTGGCGGCCAGTTAAAACCTGTTCACCTCCCACCTTTCACAAAGCCACCTCTGATCAACATGATGGCGACAAACACAGTCGCTGTAATGACAGAAGGCGATAAAGCCTGGATGAGGGTTGGGGGGACAAAAAAATGGAGAGTGGCAAACCTTGGAGAAGTCAGTCGAATGGCCAAACTGATCGATGCATCATCCACCCAGATGTCAGGAGGGGAAAAGGCCGGTGTTGCTTGCGGTGTGATGACTTTGGTCGCTATTGTGGTGGCAGGAATTGTGATCTTAATGAAACGGAGGAGAAAGTTTTCTCATTTCAGTTTTAAAAGGGGATATGAAGAGATTCAGCATGATGGCCAGAGCACTGTAGAGATTGAAAGAGAGCAGCAGAATACAAATGAAAACCCCACTCAACCTCTGCTACCATAGTTTCTGAGGGCTTTGTCTGAGATTTGGTAATTGCTGTAAAACATTGATTAGATTGCAATCAGATTTCTAAATTCTAAATGGTTGGCGTTTAGGTAATATACTGATGTGATGATGCATATAAGGGCTGCTATACTGTATTTAGAACAGATTTGCAAATAGTTTGAATGATGATGCAGTATTTTGTATTTATATATATATATATATATATATATATATATATATATATATATATATATATATATATATACACACACTAATTATACTTTTATAATGTTTTACTGAGAATATATGTATTCACAGTGTAAAAATTCTGTGCCTTGACTTTTTATGCTTGTTTCTTTAATCTTTAATCTTTGTATCTAATCTAGTCACTTTGTATTTTGTATTTAACCTATGTTTTTATATATTAATAAAATCCCACTTTCTGGCAAGCATTCACTTGTGTACTTTTTGTAAAATAAAACATGAAATTTTGATTTGTTTTATGACAGAACATTTGGAATGAATGCCACTTGTCACACTTGGTTGCAAGTTTGACAATGTCTGACAGAAGACAGAAAGCATAAACAACCACGGGATCTTCATGTGCACGTATTATCAAGTTAGAACGAGAAAAAGAAACAGGCACAGTTAGCAAATAACAATAACCAGCATGATAGTGTGTGTGTGTGTGAAGTTTGAAAACGCATTGCCATCTCACCTGAATGCTGATTTAAATGCCTTTCGAGGTTGGACATCGTCACATTGCATTACTATCCAGCAAAACAGCAGATGAAGGTAATGTTTTGAATGGTTCACCATTACCCACCATCATATACCTTTGAAATCCACCACACAACCGAACTGCAATACTCCTAGTTTCCAGCAGAGGCCAGGGTCTGCTAATATTACAGCAACCGCCAAGTCAACCTTTTATCACATAGGAAACATTACATTATATGCAGGGTGCGAATTACAGGGGAGTTTGAGGGGATTGAACACCCACCACCCTTAAAGGACGTCAAAACAAGATATATGGGCTGGTCAGCCTT'

bases = ['A', 'T', 'G', 'C', 'X', 'N']
for base in bases:
    


A = dna.count("A")
T = dna.count("T")
G = dna.count("G")
C = dna.count("C")
Other = ""

for nuc in dna:
    if nuc in ('A', 'T', 'C', 'G'):
        

for nuc in dna:
    if not nuc == ("A", "T", "G", "C"):
        count = nuc.count(re.findall("."))
        print(count)

for nuc in dna:
    nucleotide = list(nuc)
    A = nucleotide.count("A")
    T = nucleotide.count("T")
    G = nucleotide.count("G")
    C = nucleotide.count("C")
    print("Adenine content:", A, "Thymine content:", T, "Guanine content:", G, "Cytosine content:", C)
        

